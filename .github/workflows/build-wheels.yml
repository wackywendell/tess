name: Build for macos, manylinux and windows. Publish to pypi if a release.
on: [pull_request, push]

env:

  CIBW_BUILD_VERBOSITY: 3
  CIBW_BUILD: 'cp37-* cp38-* cp39-* cp310-*'
  CIBW_SKIP: '*-manylinux_i686 *-musllinux_* *-win32'
  CIBW_BEFORE_BUILD: pip install cython
  CIBW_TEST_REQUIRES: pytest numpy scipy
  CIBW_TEST_COMMAND: pytest -s -v {project}/tests

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}

    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]

    steps:

      - uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build sdist
        run: |
          pip install cython
          python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
